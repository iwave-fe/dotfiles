"=============================================================================
"    Description: _vimrc 個人設定
"         Author: iwave-fe
"  Last Modified: 2014-02-20 07:03
"        Version: 0.00
"=============================================================================
" ランタイムパスを通す必要のあるプラグインを使用する場合、
" $MY_VIMRUNTIMEを使用すると Windows/Linuxで切り分ける必要が無くなります。
" 例) vimfiles/qfixapp (Linuxでは~/.vim/qfixapp)にランタイムパスを通す場合
" set runtimepath+=$MY_VIMRUNTIME/qfixapp

"----------------------------------------
"追加定義：iwave-fe
"----------------------------------------
" タブ関連
set expandtab
set smarttab
" タブサイズはファイル毎に設定したいが、有効にならない
set tabstop=2
set shiftwidth=2
set softtabstop=2
" 自動的にインデントする
set autoindent
set smartindent
" 行末の半角スペース削除
autocmd BufWritePre * :%s/\s\+$//ge

"----------------------------------------
" 内部エンコーディング指定
"----------------------------------------
if has('unix')
	set fileformat=unix
	set fileformats=unix,dos,mac
	set fileencoding=utf-8
	set fileencodings=utf-8,iso-2202-jp,cp932,euc-jp
elseif has('win32')
	set fileformat=dos
	set fileformats=dos,unix,mac
	set fileencoding=utf-8
	set fileencodings=iso-2202-jp,utf-8,euc-jp,cp932
endif

"----------------------------------------
" ノーマルモード
"----------------------------------------
nmap <C-p> :bp<CR>
nmap <C-n> :bn<CR>
nmap <ESC><ESC> :noh<CR>

"----------------------------------------
" 各種プラグイン設定
"----------------------------------------
" bundle setting
set nocompatible               " Be iMproved
filetype off

if has('vim_starting')
	" set runtimepath+=~/.vim/.bundle/neobundle.vim/
    " call neobundle#rc(expand('~/.vim/.bundle/'))
	" set runtimepath+=/Users/iha/.vim/bundle/neobundle.vim/
endif

" call neobundle#begin(expand('/Users/iha/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
" NeoBundleFetch 'Shougo/neobundle.vim'

"NeoBundle 'Shougo/vimproc', {
"  \ 'build' : {
"    \ 'windows' : 'make -f make_mingw32.mak',
"    \ 'cygwin' : 'make -f make_cygwin.mak',
"    \ 'mac' : 'make -f make_mac.mak',
"    \ 'unix' : 'make -f make_unix.mak',
"  \ },
"  \ }

" Recommended to install
" After install, turn shell ~/.vim/bundle/vimproc, (n,g)make -f your_machines_makefile
"NeoBundle 'https://github.com/Shougo/neocomplcache.git'
"NeoBundle 'https://github.com/scrooloose/syntastic.git'
" NeoBundle 'Shougo/neocomplcache.vim'
" NeoBundle 'Shougo/unite.vim'
" NeoBundle 'Shougo/neomru.vim'
" NeoBundle 'scrooloose/syntastic'
" NeoBundle 'scrooloose/nerdtree'
" NeoBundle 'tpope/vim-endwise'
" NeoBundle 'tomtom/tcomment_vim'
" NeoBundle 'nathanaelkane/vim-indent-guides'
" NeoBundle 'vim-script/AnsiEsc.vim'

" call neobundle#end()

" netrw を有効化(Vim同梱のプラグイン)
filetype plugin indent on

filetype indent on
syntax on

" NeoBundleCheck

" neocompecache
"  autocmd BufRead *.php\|*.ctp\|*.tpl :set dictionary=~/.vim/dict/php.dict filetype=php
" NeoBundle 'Shougo/neocomplcache'
"  let g:neocomplcache_enable_at_startup = 1
"  let g:neocomplcache_enable_camel_case_completion = 1
"  let g:neocomplcache_enable_underbar_completion = 1
"  let g:neocomplcache_smart_case = 1
"  let g:neocomplcache_min_syntax_length = 3
"  let g:neocomplcache_manual_completion_start_length = 5
"  let g:neocomplcache_caching_percent_in_statusline = 1
"  let g:neocomplcache_enable_skip_completion = 1
"  let g:neocomplcache_skip_input_time = '0.5'

" syntastic
" NeoBundle 'scrooloose/syntastic'
"  let g:syntastic_check_on_open = 1
"  let g:syntastic_auto_jump = 1
"  let g:syntastic_enable_signs = 1
"  let g:syntastic_echo_current_error = 1
"  let g:syntastic_auto_loc_list = 2
"  let g:syntastic_enable_highlighting = 1
" let g:syntastic_php_phpcs_args = '--report=csv --standard=CakePHP'
"  let g:syntastic_php_phpcs_args = '-l'
 "let g:syntastic_php_checkers=['php', 'phpcs', 'phpmd']
"  let g:syntastic_php_checkers=['php']
"  let g:syntastic_javascript_checkers=['jshint']
"  let g:syntastic_ruby_checkers=['rubocop']
"  let g:syntastic_mode_map = { 'mode': 'active',
"   \ 'active_filetypes': ['ruby', 'php'] }
"  set statusline+=%#warningmsg#
"  set statusline+=%{SyntasticStatuslineFlag()}
"  set statusline+=%*

 " vim-indent-guides
" let g:indent_guides_enable_on_vim_startup = 1

 " unite.vim
 " 入力モードで開始
 " let g:unite_enable_start_insert=1
 noremap <C-P> :Unite buffer<CR>
 noremap <C-N> :Unite -buffer-name=file file<CR>
 " 今開いているファイルのディレクトリ
 noremap :uff :<C-u>UniteWithBufferDir file -buffer-name=file<CR>
 " ESC 2回で終了
 au FileType unite nnoremap <silent> <buffer> <ESC><ESC> :q<CR>
 au FileType unite inoremap <silent> <buffer> <ESC><ESC> <ESC>:q<CR>

" filetype plugin on
" filetype indent on

"----------------------------------------
" 挿入モード
"----------------------------------------

"----------------------------------------
" ビジュアルモード
"----------------------------------------

"----------------------------------------
" コマンドモード
"----------------------------------------

"----------------------------------------
" Vimスクリプト
"----------------------------------------

"----------------------------------------
" 一時設定
"----------------------------------------
